// Contract for requirement test
CONTRACT_TYPE
{
    // Unique name of the contract (required)
    name = TestRequirement_CelestialBodyProgress

    group = RequirementTest
    maxSimultaneous = 1

    // Contract text
    title = Celestial Body Progress Requirements
    description = description
    synopsis = synopsis
    completedMessage = completedMessage

    targetBody = Kerbin

    // Need at least one parameter
    PARAMETER
    {
        type = ReachSpace
    }

    REQUIREMENT
    {
        type = AltitudeRecord

        minAltitude = 30000
    }

    REQUIREMENT
    {
        type = AltitudeRecord

        invertRequirement = true
        minAltitude = 30000
    }

    REQUIREMENT
    {
        type = BaseConstruction
    }

    REQUIREMENT
    {
        type = BaseConstruction

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = BaseConstruction

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = BaseConstruction

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = BaseConstruction

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = BaseConstruction

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Docking
    }

    REQUIREMENT
    {
        type = Docking

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Docking

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Docking

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Docking

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Docking

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Escape
    }

    REQUIREMENT
    {
        type = Escape

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Escape

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Escape

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Escape

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Escape

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = FirstCrewToSurvive
    }

    REQUIREMENT
    {
        type = FirstCrewToSurvive
        invertRequirement = true
    }

    REQUIREMENT
    {
        type = FirstLaunch
    }

    REQUIREMENT
    {
        type = FirstLaunch
        invertRequirement = true
    }


    REQUIREMENT
    {
        type = FlyBy
        targetBody = Duna
    }

    REQUIREMENT
    {
        type = FlyBy

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = FlyBy

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = FlyBy

        invertRequirement = true
        targetBody = Duna
    }

    REQUIREMENT
    {
        type = FlyBy

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = FlyBy

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = KSCLanding
    }

    REQUIREMENT
    {
        type = KSCLanding
        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Landing
    }

    REQUIREMENT
    {
        type = Landing

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Landing

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Landing

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Landing

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Landing

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Orbit
    }

    REQUIREMENT
    {
        type = Orbit

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Orbit

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Orbit

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Orbit

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Orbit

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = ReachSpace
    }

    REQUIREMENT
    {
        type = ReachSpace
        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Rendezvous
    }

    REQUIREMENT
    {
        type = Rendezvous

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Rendezvous

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = Rendezvous

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Rendezvous

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = Rendezvous

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = ReturnFromFlyBy
        targetBody = Duna
    }

    REQUIREMENT
    {
        type = ReturnFromFlyBy

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = ReturnFromFlyBy

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = ReturnFromFlyBy

        targetBody = Duna
        invertRequirement = true
    }

    REQUIREMENT
    {
        type = ReturnFromFlyBy

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = ReturnFromFlyBy

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = ReturnFromOrbit
    }

    REQUIREMENT
    {
        type = ReturnFromOrbit

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = ReturnFromOrbit

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = ReturnFromOrbit

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = ReturnFromOrbit

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = ReturnFromOrbit

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = ReturnFromSurface
        targetBody = Duna
    }

    REQUIREMENT
    {
        type = ReturnFromSurface

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = ReturnFromSurface

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = ReturnFromSurface

        invertRequirement = true
        targetBody = Duna
    }

    REQUIREMENT
    {
        type = ReturnFromSurface

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = ReturnFromSurface

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = RunwayLanding
    }

    REQUIREMENT
    {
        type = RunwayLanding
        invertRequirement = true
    }

    REQUIREMENT
    {
        type = Spacewalk
    }

    REQUIREMENT
    {
        type = Spacewalk
        invertRequirement = true
    }

    REQUIREMENT
    {
        type = SplashDown
    }

    REQUIREMENT
    {
        type = SplashDown

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = SplashDown

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = SplashDown

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = SplashDown

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = SplashDown

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = SurfaceEVA
    }

    REQUIREMENT
    {
        type = SurfaceEVA

        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = SurfaceEVA

        checkType = UNMANNED
        targetBody = Minmus
    }

    REQUIREMENT
    {
        type = SurfaceEVA

        invertRequirement = true
    }

    REQUIREMENT
    {
        type = SurfaceEVA

        invertRequirement = true
        checkType = MANNED
        targetBody = Mun
    }

    REQUIREMENT
    {
        type = SurfaceEVA

        invertRequirement = true
        checkType = UNMANNED
        targetBody = Minmus
    }
}
