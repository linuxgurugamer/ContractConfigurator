// Contract for parameter test
CONTRACT_TYPE
{
    // Unique name of the contract (required)
    name = TestParameter_Set

    group = ParameterTest
    maxSimultaneous = 1
    targetBody = Kerbin

    // Contract text
    title = Set Parameters
    description = description
    synopsis = synopsis
    completedMessage = completedMessage

    PARAMETER
    {
        type = All

        PARAMETER
        {
            type = ReachState

            minAltitude = 20000
            maxAltitude = 50000

            minSpeed = 1000
            maxSpeed = 5000
        }

        PARAMETER
        {
            type = Duration

            duration = 12m 30s
            startCriteria = NEXT_LAUNCH

            preWaitText = Waiting for launch
            waitingText = Countdown
            completionText = Blastoff!
        }
    }

    PARAMETER
    {
        type = Any

        PARAMETER
        {
            type = ReachSpace
        }

        PARAMETER
        {
            type = ReachState

            minSpeed = 1000
            maxSpeed = 5000
        }
    }

    PARAMETER
    {
        type = AtLeast

        count = 2

        PARAMETER
        {
            type = ReachSpace
        }

        PARAMETER
        {
            type = ReachState

            minSpeed = 4000
            maxSpeed = 5000
        }

        PARAMETER
        {
            type = CollectScience
        }
    }

    PARAMETER
    {
        type = AtMost

        count = 1

        PARAMETER
        {
            type = ReachState

            minAltitude = 5000
        }

        PARAMETER
        {
            type = CollectScience
        }
    }

    PARAMETER
    {
        type = None

        PARAMETER
        {
            type = HasResource

            resource = LiquidFuel
            minQuantity = 1000
        }

        PARAMETER
        {
            type = HasCrew
            trait = Scientist
        }
    }

    PARAMETER
    {
        type = Not

        PARAMETER
        {
            type = ReachState

            situation = LANDED
        }
    }

    // In this example of the Sequence parameter, the player must orbit the Mun,
    // then orbit Minmus.  If the player orbits Minmus first, the parameter fails.
    PARAMETER
    {
        type = Sequence

        hiddenParameter = OrbitMinmus
        failWhenCompleteOutOfOrder = true

        PARAMETER
        {
            name = OrbitMun
            type = ReachState

            situation = ORBITING
            targetBody = Mun
        }

        PARAMETER
        {
            name = OrbitMinmus
            type = ReachState

            situation = ORBITING
            targetBody = Minmus
        }
    }
}
